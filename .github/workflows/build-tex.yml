name: Build TeX files

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag name for release"
        required: false
        default: nightly
  schedule:
    - cron: 0 0 * * *
  push:
    branches: [ "main" ]
    tags: ["v[0-9]+.[0-9]+.[0-9]+*"]
    paths: 
      - "**.tex"
      - '**.cmake'
      - '**/CMakeLists.txt'
      - '.github/workflows/build-tex.yml'
  pull_request:
    branches: [ "main" ]
    paths: 
      - "**.tex"
      - '**.cmake'
      - '**/CMakeLists.txt'
      - '.github/workflows/build-tex.yml'

jobs:
  build-tex:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    # https://github.com/actions/setup-python/issues/719
    #    cache: 'pip'
    - run: python3 -m pip install -r requirements.txt

    # - name: Install ghostscript
    #   run: |
    #     sudo apt update
    #     sudo apt install ghostscript
    
    - name: Install TeX Live
      uses: zauguin/install-texlive@v3
      with:
        package_file: .github/tl_packages
    
    - name: Configure CMake
      run: |
        cmake -B ${{github.workspace}}/build -DBUILD_DOCS=ON -DBUILD_PROG=OFF
    
    - name: Build
      run: cmake --build ${{github.workspace}}/build --target latexmkdocs

    # - name: Copy build files
    #   run: cp -r build/docs .
    
    # - name: Git commit
    #   run: |
    #     git config user.name github-actions
    #     git config user.email github-actions@github.com
    #     git add .
    #     git commit -m "chore: update generated docs"
    #     git push

    - name: Update artifacts
      uses: actions/upload-artifact@v4
      with:
        name: docs
        path: build/docs

  release:
    runs-on: ubuntu-latest
    needs: build-tex
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: docs
        path: artifacts_docs
    
    - name: Archive and compress
      run: |
        find artifacts_docs/ -printf "%P\n" | tar -cvf adocs.tar --no-recursion -C artifacts_docs/ -T -
        zstd -z -1 adocs.tar -o loser-homework-docs-nightly.tar.zst
    
    - if: github.event_name == 'workflow_dispatch'
      run: echo "TAG_NAME=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV

    - if: github.event_name == 'schedule'
      run: echo 'TAG_NAME=nightly' >> $GITHUB_ENV

    - if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      run: |
        TAG_NAME=${{ github.ref }}
        echo "TAG_NAME=${TAG_NAME#refs/tags/}" >> $GITHUB_ENV
        echo "DRAFT=true" >> $GITHUB_ENV

    - if: env.TAG_NAME == 'nightly'
      name: Delete previous nightly
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        echo 'PRERELEASE=true' >> $GITHUB_ENV
        gh release delete nightly --yes || true
        git config user.name github-actions
        git config user.email github-actions@github.com
        git push origin :nightly || true
    - name: Wait a sec
      run: sleep 2
    - name: Release
      uses: softprops/action-gh-release@v1
      if: env.TAG_NAME != 'pull_request' && env.TAG_NAME != ''
      with:
        name: "Docs ${{ env.TAG_NAME }}"
        prerelease: ${{ env.PRERELEASE != '' }}
        files: loser-homework-docs-nightly.tar.zst
        tag_name: ${{ env.TAG_NAME }}
        draft: ${{ env.DRAFT != '' || null }}


